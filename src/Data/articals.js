let articles = [
    {
        id: "0",
        title: "HTML",
        desc: "HTML, or HyperText Markup Language, is the most basic building block of the web. It is a markup language that is used to define the structure of a web page. HTML uses tags to indicate the different elements of a web page, such as headings, paragraphs, images, and lists. HTML is a very simple language to learn, but it is also very powerful. With HTML, you can create a wide variety of web pages, from simple static pages to complex dynamic pages. What is HTML? HTML is a markup language, which means that it uses tags to define the structure of a web page. Tags are surrounded by angle brackets, such as <h1> and </h1>. The opening tag indicates the beginning of an element, and the closing tag indicates the end of an element. For example, the following HTML code defines a heading element: This is a heading The opening tag <h1> indicates that the following text is a heading. The closing tag </h1> indicates the end of the heading element. HTML Elements There are many different HTML elements, each of which has a specific purpose. Some of the most common HTML elements include: Headings Paragraphs Images Lists Attributes HTML elements can also have attributes, which provide additional information about the element. For example, the following HTML code defines an image element with an alt attribute: This is an image The alt attribute provides a text description of the image. This is useful for people who are using screen readers or who have images turned off in their browsers. HTML Syntax HTML is a very strict language, and it is important to follow the correct syntax. If you do not follow the correct syntax, your web page may not display correctly. Here are some of the most important rules of HTML syntax: Tags must be closed. Every opening tag must have a corresponding closing tag. Tags must be nested correctly. Elements can only be nested within elements that allow them to be nested. Attributes must be in the correct order. Attributes must be in the order that they are defined in the HTML specification. HTML 5 HTML 5 is the latest version of HTML. It was released in 2014, and it includes many new features and elements. Some of the most important new features of HTML 5 include: Semantic elements Multimedia support Web forms Conclusion HTML is a powerful language that can be used to create a wide variety of web pages. It is a relatively easy language to learn, and it is supported by all major web browsers. If you are interested in learning more about HTML, there are many resources available online. You can find tutorials, code samples, and reference documentation. I hope this article has given you a basic understanding of HTML. If you have any questions, please feel free to ask"
    },
    {
        id: "1",
        title: "CSS",
        desc: "CSS, or Cascading Style Sheets, is a language that is used to style web pages. CSS is used to control the appearance of web pages, such as the font, color, and layout of elements. CSS is a very powerful language, and it can be used to create a wide variety of visual effects. With CSS, you can create web pages that are both visually appealing and functional. What is CSS? CSS is a style sheet language, which means that it is used to define the style of a web page. CSS styles are defined in separate files, which are then linked to the HTML code of the web page. CSS styles are written in a cascading fashion, which means that the styles in later style sheets will override the styles in earlier style sheets. This allows you to create complex and layered styles for your web pages. CSS Elements There are many different CSS elements, each of which has a specific purpose. Some of the most common CSS elements include: Selectors: Selectors are used to select the elements that you want to style. For example, the selector h1 will select all of the h1 elements on the page. Properties: Properties are used to define the style of an element. For example, the property color is used to set the color of an element. Values: Values are the specific values that are used to set the properties of an element. For example, the value red is used to set the color of an element to red. CSS Syntax CSS is a very strict language, and it is important to follow the correct syntax. If you do not follow the correct syntax, your CSS styles may not be applied correctly. Here are some of the most important rules of CSS syntax: Selectors must be valid. Selectors must be written in a specific format, and they must select valid elements. Properties must be valid. Properties must be written in a specific format, and they must be valid properties. Values must be valid. Values must be written in a specific format, and they must be valid values. CSS Inheritance CSS inheritance is a feature that allows you to inherit the styles of one element to another element. For example, if you set the color of an h1 element to red, all of the h1 elements on the page will be red. CSS inheritance can be a very powerful tool, but it is important to use it carefully. If you inherit styles too much, your web pages can become cluttered and difficult to maintain. CSS Preprocessors CSS preprocessors are tools that are used to extend the functionality of CSS. CSS preprocessors can be used to do things like: Mixin variables Mixin functions Compile CSS into other formats CSS preprocessors can be a very powerful tool, but they are not necessary for most web developers. Conclusion CSS is a powerful language that can be used to create a wide variety of visual effects. With CSS, you can create web pages that are both visually appealing and functional. If you are interested in learning more about CSS, there are many resources available online. You can find tutorials, code samples, and reference documentation. I hope this article has given you a basic understanding of CSS. If you have any questions, please feel free to ask. Additional Topics In addition to the topics that have already been covered, here are some other topics that you may be interested in learning about: CSS Grid: CSS Grid is a new layout system that was introduced in CSS 2.1. CSS Grid allows you to create complex layouts with ease. CSS Flexbox: CSS Flexbox is a new layout system that was introduced in CSS 3. CSS Flexbox is a simpler layout system than CSS Grid, but it is still very powerful. CSS Animation: CSS Animation allows you to animate the elements on your web pages. CSS Animation can be used to create simple animations, such as blinking text, or more complex animations, such as rotating images. CSS Media Queries: CSS Media Queries allow you to specify different styles for different devices. For example, you can specify different styles for mobile devices, tablets, and desktop computers."
    },
    {
        id: "2",
        title: "JS",
        desc: "JavaScript is a programming language that is used to create interactive web pages. JavaScript can be used to do things like: Add interactivity to web pages: JavaScript can be used to add things like buttons, menus, and sliders to web pages. Animate web pages: JavaScript can be used to animate the elements on web pages. Validate form data: JavaScript can be used to validate form data before it is submitted to a server. Create games: JavaScript can be used to create simple games. What is JavaScript? JavaScript is a scripting language, which means that it is executed by the web browser. This means that JavaScript code is not sent to the server when a web page is loaded. Instead, the JavaScript code is executed by the web browser on the user's computer. JavaScript is a very powerful language, and it can be used to create a wide variety of interactive web pages. JavaScript is also a very versatile language, and it can be used to do things that are not possible with HTML and CSS. JavaScript Syntax JavaScript is a very strict language, and it is important to follow the correct syntax. If you do not follow the correct syntax, your JavaScript code may not work correctly. Here are some of the most important rules of JavaScript syntax: Variables must be declared before they are used. Functions must be defined before they are called. Statements must be terminated with semicolons. Comments must be started with // or /* */. JavaScript Objects JavaScript objects are the basic building blocks of JavaScript. Objects are used to store data and methods. Objects are created using the new keyword. For example, the following code creates a new object called myObject: JavaScript var myObject = new Object(); Use code with caution. Learn more Objects can have properties and methods. Properties are used to store data, and methods are used to perform actions. Properties are accessed using the dot notation. For example, the following code gets the property name from the object myObject: JavaScript var name = myObject.name; Use code with caution. Learn more Methods are called using the parentheses notation. For example, the following code calls the method greet() on the object myObject: JavaScript myObject.greet(); Use code with caution. Learn more JavaScript Events JavaScript events are used to respond to user interaction. Events are triggered when something happens on a web page, such as when a button is clicked or when a text field is changed. Events are handled using event handlers. Event handlers are functions that are called when an event is triggered. Event handlers are attached to elements using the addEventListener() method. For example, the following code attaches an event handler to the button myButton: JavaScript myButton.addEventListener('click', function() { // Do something when the button is clicked. }); Use code with caution. Learn more JavaScript Libraries There are many JavaScript libraries available, which provide a wide range of functionality. Some of the most popular JavaScript libraries include: jQuery AngularJS React Vue.js JavaScript libraries can be used to make JavaScript development easier and faster. They can also be used to add new functionality to web pages. Conclusion JavaScript is a powerful language that can be used to create a wide variety of interactive web pages. JavaScript is also a very versatile language, and it can be used to do things that are not possible with HTML and CSS. If you are interested in learning more about JavaScript, there are many resources available online. You can find tutorials, code samples, and reference documentation. I hope this article has given you a basic understanding of JavaScript. If you have any questions, please feel free to ask. Additional Topics In addition to the topics that have already been covered, here are some other topics that you may be interested in learning about: JavaScript Modules: JavaScript Modules are a new feature in JavaScript that allow you to organize your code into reusable modules. Asynchronous JavaScript: Asynchronous JavaScript is a technique that allows you to run JavaScript code in the background. Promises: Promises are a new feature in JavaScript that allow you to handle asynchronous code in a more elegant way. Fetch API: The Fetch API is a new API that allows you to make HTTP requests from JavaScript."
    }

]


export default articles;